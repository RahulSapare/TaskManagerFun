{"version":3,"sources":["Components/Left.js","Components/Right.js","Components/Popup_form.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","backgroundColor","palette","secondary","light","boxRoot","overflow","height","padding","alignItems","Left","props","taskList","handletask","setIsInitial","isSmallWidth","classes","useState","Date","date","changeDate","className","utils","MomentUtils","DatePicker","autoOk","orientation","variant","openTo","value","onChange","handleOpen","dateChange","disablePast","Box","List","component","aria-label","map","task","index","ListItem","button","onClick","id","ListItemIcon","ListItemText","primary","taskName","moment","format","Divider","TASK_LOCAL","Right","handleTaskList","setModelOpen","isInitial","handleSnackClick","IconButton","tempTaskList","splice","localStorage","removeItem","setItem","JSON","stringify","vertical","horizontal","snackMsg","description","width","left","marginTop","breakpoints","down","schema","Yup","shape","required","Popup_form","handleClose","isEdit","initialValues","Paper","elevation","Typography","validationSchema","onSubmit","values","list","getItem","getList","parse","addArray","length","errors","touched","handleBlur","handleChange","TextField","name","label","onBlur","error","helperText","multiline","rows","Button","type","color","App","React","open","setOpen","setDate","setTaskList","setTask","setIsEdit","openSnack","state","setState","newState","useEffect","Grid","container","item","xs","sm","isMobile","Modal","onClose","aria-labelledby","aria-describedby","Snackbar","anchorOrigin","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9e10b6d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { IconButton, makeStyles, Box } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\n// sortDate (date){\r\n//     const {date}=this.state \r\n//     let newDate = date.reverse()\r\n//     this.setState({date:newDate.sort((a,b)=>a.date>b.date)})\r\n// }\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    boxRoot:{\r\n            overflow: 'auto',\r\n            height: '38%',\r\n            padding:'.5rem',\r\n            alignItems:'center',\r\n            backgroundColor:'#495CC0'\r\n    }\r\n\r\n}));\r\n\r\nexport const Left = (props) => {\r\n    const { taskList, handletask, setIsInitial, isSmallWidth} = props\r\n\r\n    const classes = useStyles()\r\n    const [date, changeDate] = useState(new Date());\r\n\r\n    const listClick = (id) =>{\r\n        taskList.map((task,index)=>{\r\n            if(id===index){\r\n                handletask(task)\r\n                setIsInitial(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const dateChange = (date) => {\r\n        changeDate(date)\r\n        props.handleOpen(date)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Left\">\r\n            <h1><AssignmentIcon />    Add New Task</h1>\r\n\r\n            <h3>Press date to add task.</h3>\r\n            \r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <DatePicker\r\n                    autoOk\r\n                    orientation={isSmallWidth?\"portrait\":\"landscape\"}\r\n                    variant=\"static\"\r\n                    openTo=\"date\"\r\n                    value={date}\r\n                    onChange={date => dateChange(date)}\r\n                    disablePast\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <div><h3>TASKS</h3></div>\r\n\r\n            <Box classes={{root:classes.boxRoot}}>\r\n\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n                    {\r\n                      taskList && taskList.map((task, index) => (\r\n                            <Box>\r\n\r\n                            {/* let sortedCars1 = cars.sort((a, b) =>\r\n                                a.initialRegistration.split('/').reverse().join().localeCompare(b.initialRegistration.split('/').reverse().join())); */}\r\n                                <ListItem button onClick={()=>listClick(index)}>\r\n                                    <ListItemIcon>\r\n                                        <FormatListBulletedIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={task.taskName} />\r\n                                    <ListItemText primary={moment(task.date).format(\"DD-MM-YYYY\") } />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))\r\n                    }\r\n                </List>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Left\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, IconButton } from '@material-ui/core';\r\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\r\nimport { Edit3 } from 'react-feather';\r\nimport moment from 'moment';\r\nconst TASK_LOCAL = 'taskName'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    boxRoot: {\r\n        overflow: 'auto',\r\n        height: '50%'\r\n    }\r\n\r\n}));\r\n\r\nexport const Right = (props) => {\r\n    const { task, handleTaskList, taskList, setModelOpen, setIsInitial, isInitial ,handleSnackClick} = props\r\n\r\n    const deleteTask = () => {\r\n      \r\n        const tempTaskList = [...taskList]\r\n        \r\n        if (task !== -1) {\r\n            tempTaskList.splice(task, 1);\r\n        }\r\n\r\n        localStorage.removeItem(TASK_LOCAL)\r\n        localStorage.setItem(TASK_LOCAL, JSON.stringify(tempTaskList))\r\n        setIsInitial(false)\r\n        handleTaskList(tempTaskList)\r\n        handleSnackClick({ vertical: 'top', horizontal: 'center', snackMsg:\"Task Deleted\" })\r\n    }\r\n\r\n    const editTask = () => {\r\n        setModelOpen(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Right_Page\">\r\n            <div className=\"heading\">\r\n                <h1>Saved Tasks</h1>\r\n            </div>\r\n\r\n            {!isInitial?\r\n            <div className=\"Lists\">\r\n                <h1>No Tasks selected</h1>\r\n            </div>\r\n            :\r\n            <div className=\"Lists\">\r\n                <div>\r\n                    <h2 className=\"date\">\r\n                        Date: {task && moment(task.date).format(\"DD-MM-YY HH:mm\")}\r\n                    </h2>\r\n                    <IconButton onClick={deleteTask} ><DeleteSweepIcon/></IconButton>\r\n                    <IconButton onClick={editTask}><Edit3 /></IconButton>\r\n                </div>\r\n                <h1 className=\"name\">\r\n                    Task Name:  {task && task.taskName}\r\n                </h1>\r\n                <h3 className=\"desc\">\r\n                    Description:  {task && task.description}\r\n                </h3>\r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Right\r\n","import React, { useEffect } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { TextField, Paper, Typography, Button, makeStyles, colors } from '@material-ui/core';\r\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from \"yup\";\r\nimport { findByLabelText } from '@testing-library/react';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\n\r\nconst TASK_LOCAL = 'taskName'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '30%',\r\n        position: 'fixed',\r\n        right: '35%',\r\n        left: '35%',\r\n        marginTop: '10rem',\r\n        [theme.breakpoints.down('sm')]:{\r\n            \r\n            width: '90%',\r\n            right: '5%',\r\n            left: '5%',\r\n            position: 'fixed',\r\n            marginTop: '3rem',\r\n        }\r\n    }\r\n}));\r\n\r\nconst schema = Yup.object().shape({\r\n    taskName: Yup.string().required(\"Task Name required\"),\r\n    description: Yup.string().required(\"Description required\")\r\n})\r\n\r\n// const taskName=[\r\n//     {\r\n//         taskName: \"ABCD\",\r\n//         description: \"EFGH\"\r\n//     },\r\n//     {\r\n//         taskName: \"ABCD\",\r\n//         description: \"EFGH\"\r\n//     },\r\n// ]\r\n\r\nexport const Popup_form = (props) => {\r\n    const { date, handleTaskList, handleClose, handleSnackClick, isEdit, task, taskList, handletask } = props\r\n    const classes = useStyles()\r\n\r\n    const initialValues = {\r\n        taskName: isEdit ? task.taskName : '',\r\n        description: isEdit ? task.description : ''\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        if (localStorage.getItem(TASK_LOCAL)) {\r\n            const getList = JSON.parse(localStorage.getItem(TASK_LOCAL));\r\n            localStorage.removeItem(TASK_LOCAL)\r\n            const addArray = [...getList, { id: taskList.length, taskName: values.taskName, description: values.description, date: date }]\r\n            localStorage.setItem(TASK_LOCAL, JSON.stringify(addArray))\r\n            handleTaskList(addArray)\r\n            handleSnackClick({ vertical: 'top', horizontal: 'center', snackMsg: \"Task Added\" })\r\n        } else {\r\n            const addArray = [{ id: 0, taskName: values.taskName, description: values.description, date: date }]\r\n            localStorage.setItem(TASK_LOCAL, JSON.stringify(addArray))\r\n            handleTaskList(addArray)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    const handleEdit = (values) => {\r\n\r\n        const tempTaskList = [...taskList]\r\n        tempTaskList.map((list) => {\r\n            if (list.id === task.id) {\r\n                list.taskName = values.taskName\r\n                list.description = values.description\r\n                handletask(list)\r\n            }\r\n        })\r\n\r\n        localStorage.removeItem(TASK_LOCAL)\r\n        localStorage.setItem(TASK_LOCAL, JSON.stringify(tempTaskList))\r\n        handleTaskList(tempTaskList)\r\n        handleSnackClick({ vertical: 'top', horizontal: 'center', snackMsg: \"Task Edited\" })\r\n        handleClose()\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Paper elevation={5} classes={{ root: classes.root }} className=\"paper\">\r\n\r\n            <Typography\r\n                variant='subtitle1'\r\n            >\r\n                {isEdit ? moment(task.date).format(\"DD-MM-YY HH:mm\") : moment(date).format(\"DD-MM-YY HH:mm\")}\r\n            </Typography>\r\n            <Formik className=\"formik\"\r\n                initialValues={initialValues}\r\n                validationSchema={schema}\r\n                onSubmit={isEdit ? handleEdit : handleSubmit}\r\n            >\r\n                {({ values,\r\n                    errors,\r\n                    touched,\r\n                    handleBlur,\r\n                    handleChange, }) => (<Form className=\"formsm\">\r\n                        <div className=\"formm\">\r\n                            <div className=\"ADDTASK\"><h1>{isEdit ? \"Edit Task\" : \"Add Task\"}</h1></div>\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    name=\"taskName\"\r\n                                    label=\"Task name\"\r\n                                    onBlur={handleBlur}\r\n                                    value={values.taskName}\r\n                                    onChange={handleChange}\r\n                                    error={touched.taskName && errors.taskName}\r\n                                    helperText={touched.taskName && errors.taskName}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    name=\"description\"\r\n                                    onBlur={handleBlur}\r\n                                    label=\"Description\"\r\n                                    value={values.description}\r\n                                    onChange={handleChange}\r\n                                    error={touched.description && errors.description}\r\n                                    helperText={touched.description && errors.description}\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </div>\r\n                            <div className=\"addBtn\">\r\n                                <Button variant=\"contained\" type=\"submit\" color=\"primary\">{isEdit ? \"Edit Task\" : \"Add Task\"}</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>)}\r\n            </Formik>\r\n        </Paper>\r\n\r\n    );\r\n}\r\n\r\nexport default Popup_form","import './App.css';\nimport React, { useEffect } from 'react'\nimport Left from './Components/Left';\nimport Right from \"./Components/Right\"\nimport { Modal,Paper,Grid } from '@material-ui/core';\nimport Popup_form from \"./Components/Popup_form\"\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {isMobile} from \"react-device-detect\";\n\nconst TASK_LOCAL = 'taskName'\n\nfunction App() {\n\n  const [open, setOpen] = React.useState(false);\n\n  const [date, setDate] = React.useState(false);\n\n  const [taskList, setTaskList] = React.useState([]);\n\n  const [task, setTask] = React.useState({});\n\n  const [isEdit, setIsEdit] = React.useState(false);\n\n  const [isInitial, setIsInitial] = React.useState(false);\n\n  const [state, setState] = React.useState({\n    openSnack: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const { vertical, horizontal, openSnack, snackMsg } = state;\n\n  const handleSnackClick = (newState) => {\n    setState({ openSnack: true, ...newState });\n  };\n\n  const handleSnackClose = () => {\n    setState({ ...state, openSnack: false });\n  };\n\n  const handletask = (task) =>{\n    setTask({...task})\n  }\n\n  const handleTaskList = (list) =>{\n    setTaskList(list)\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n    setIsEdit(false)\n  };\n\n  const handleOpen = (date) => {\n    setDate(date)\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    localStorage.getItem(TASK_LOCAL)  &&\n    handleTaskList(JSON.parse(localStorage.getItem(TASK_LOCAL)))\n  }, []);\n\n  const openEdit = () =>{\n    setOpen(true)\n    setIsEdit(true)\n  }\n\n  return (\n    <div className=\"Container\">\n\n<Grid container>\n<Grid item xs={12} sm={3}>\n      <Left handleOpen={handleOpen} taskList={taskList} handletask={handletask} setIsInitial={setIsInitial} isSmallWidth={isMobile} />\n      </Grid>\n      <Grid item xs={12} sm={9}>\n      <Right task={task} taskList={taskList} handleTaskList={handleTaskList} setModelOpen={openEdit} setIsInitial={setIsInitial} handleSnackClick={handleSnackClick} isInitial={isInitial} />\n      </Grid>\n</Grid>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n      <Paper component=\"span\">\n        <Popup_form date={date} handleTaskList={handleTaskList} handleClose={handleClose} handleSnackClick={handleSnackClick} handletask={handletask} isEdit={isEdit} task={task} taskList={taskList} />\n      </Paper>\n      </Modal>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={openSnack}\n        onClose={handleSnackClose}\n        message={snackMsg}\n        key={vertical + horizontal}\n      >\n      </Snackbar>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}